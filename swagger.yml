openapi: 3.0.0
info:
  title: "BIGGS_TAXI"
  description: "An API about BIGGS taxi app, covering both user registration/authentication and order management."
  version: "1.0.0"

servers:
  - url: "/api"

components:
  schemas:
    CreateUser:
      type: "object"
      required:
        - fullname
        - username
        - email
        - password
      properties:
        fullname:
          type: "string"
        username:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
    EnterUser:
      type: "object"
      required:
        - login_or_email
        - password
      properties:
        login_or_email:
          type: "string"
        password:
          type: "string"
    Order:
      type: "object"
      required:
        - user_id
        - pickup_location
        - destination
        - distance
        - car_category
        - order_amount
        - start_time
        - end_time
        - total_ride_time
        - payment_method
      properties:
        user_id:
          type: "integer"
        pickup_location:
          type: "string"
        destination:
          type: "string"
        distance:
          type: "number"
        car_category:
          type: "string"
        start_time:
          type: "string"
        end_time:
          type: "string"
        total_ride_time:
          type: "integer"
        order_amount:
          type: "integer"
        payment_method:
          type: "string"
    Error:
      type: "object"
      properties:
        message:
          type: "string"
  responses:
    BadRequest:
      description: "Invalid request parameters"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: "Resource not found"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Error:
      description: "General error response"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    userIdParam:
      name: "id_person"
      in: "path"
      required: true
      schema:
        type: "string"
    tripIdParam:
      name: "trip_id"
      in: "path"
      required: true
      schema:
        type: "string"

paths:
  /:
    get:
      operationId: "main.index"
      tags:
        - "Start window"
      summary: "Opens the start window."
      responses:
        "200":
          description: "Start window was opened successfully."

  /registration:
    post:
      operationId: "src.controllers.login_controller.registration"
      tags:
        - "Register"
      summary: "Register a new user."
      requestBody:
        description: "User to register"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "user"
              $ref: "#/components/schemas/CreateUser"
      responses:
        "201":
          description: "User was successfully registered."
        "400":
          $ref: "#/components/responses/BadRequest"

  /entrance:
    post:
      operationId: "src.controllers.login_controller.entrance"
      tags:
        - "Enter"
      summary: "User enters with their email and password."
      requestBody:
        description: "User enters"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "user"
              $ref: "#/components/schemas/EnterUser"
      responses:
        "200":
          description: "User successfully entered."
        "400":
          $ref: "#/components/responses/BadRequest"

  /orders:
    get:
      operationId: "src.controllers.orders_controller.get_all"
      tags:
        - "Orders"
      summary: "Read the list of people"
      responses:
        "200":
          description: "Successfully read people list"
    post:
      operationId: "src.controllers.orders_controller.create_order"
      tags:
        - "Orders"
      summary: "Getting order information"
      requestBody:
        description: "Order to create"
        required: True
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "201":
          description: "The order data has been successfully received"

  /orders/{id_person}:
    get:
      operationId: "src.controllers.orders_controller.get_all_person"
      tags:
        - "Orders"
      summary: "Get orders by person ID"
      parameters:
        - $ref: "#/components/parameters/userIdParam"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Order"

  /orders/complete:
    post:
      operationId: "src.controllers.orders_controller.complete_order"
      tags:
        - "Orders"
      summary: "Complete order"
      description: "Complete the specified order and update driver status."
      requestBody:
        description: "Order completion details"
        required: true
        content:
          application/json:
            schema:
              type: "object"
              required:
                - order_id
                - driver_id
                - user_rating
              properties:
                order_id:
                  type: "integer"
                  description: "The ID of the order to be completed"
                driver_id:
                  type: "integer"
                  description: "The ID of the driver who completed the order"
                user_rating:
                  type: "number"
                  description: "The rating given by the user for the completed order"
      responses:
        "200":
          description: "Order successfully completed and driver's status and rating updated"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"

  /trips/{trip_id}:
    delete:
      summary: "Delete trip by its identifier"
      description: "Deletes a trip from the CSV file by its identifier."
      operationId: "src.controllers.orders_controller.delete_trip_by_id"
      tags:
        - "Orders"
      parameters:
        - $ref: "#/components/parameters/tripIdParam"
      responses:
        "200":
          description: "Trip successfully deleted"
        "404":
          $ref: "#/components/responses/NotFound"
